{
    "$schema": "https://vega.github.io/schema/vega/v6.json",
    "description": "Force-directed graph with below-the-chart hover table for edges (2 rows) and nodes (1 row).",
    "width": 800,
    "height": {
        "signal": "plotH + gap + tableH"
    },
    "autosize": "pad",
    "padding": 8,
    "signals": [
        {
            "name": "plotH",
            "value": 500
        },
        {
            "name": "gap",
            "value": 30
        },
        {
            "name": "tableH",
            "value": 96
        },
        {
            "name": "rowH",
            "value": 22
        },
        {
            "name": "numCols",
            "value": 9
        },
        {
            "name": "cellW",
            "update": "width / numCols"
        },
        {
            "name": "cellPad",
            "value": 8
        },
        {
            "name": "$cx",
            "update": "width / 2"
        },
        {
            "name": "$cy",
            "update": "plotH / 2"
        },
        {
            "name": "$nodeRadius",
            "value": 22
        },
        {
            "name": "$nodeCharge",
            "value": -15
        },
        {
            "name": "$linkDistance",
            "value": 140
        },
        {
            "name": "$static",
            "value": false
        },
        {
            "name": "scoreThreshold",
            "value": 18,
            "bind": {
                "input": "range",
                "min": -60,
                "max": 60,
                "step": 1,
                "name": "Score Threshold:"
            }
        },
        {
            "description": "Current pointer position during a drag.",
            "name": "fix",
            "value": null,
            "on": [
                {
                    "events": "symbol:pointerdown",
                    "update": "xy()",
                    "force": true
                },
                {
                    "events": "[symbol:pointerdown, window:pointerup] > window:pointermove!",
                    "update": "xy()",
                    "force": true
                }
            ]
        },
        {
            "description": "Graph node currently being dragged.",
            "name": "node",
            "value": null,
            "on": [
                {
                    "events": "symbol:pointerdown",
                    "update": "item()"
                }
            ]
        },
        {
            "description": "Flag to restart force simulation when drag state or threshold changes.",
            "name": "restart",
            "value": 0,
            "on": [
                {
                    "events": {
                        "signal": "fix"
                    },
                    "update": "restart + 1"
                },
                {
                    "events": {
                        "signal": "scoreThreshold"
                    },
                    "update": "restart + 1"
                }
            ]
        },
        {
            "name": "hoverLink",
            "value": null,
            "on": [
                {
                    "events": "@links:mouseover",
                    "update": "datum"
                },
                {
                    "events": "@links:mouseout",
                    "update": "null"
                },
                {
                    "events": "@nodes:mouseover",
                    "update": "null"
                },
                {
                    "events": "view:mouseleave",
                    "update": "null"
                }
            ]
        },
        {
            "name": "hoverNode",
            "value": null,
            "on": [
                {
                    "events": "@nodes:mouseover",
                    "update": "datum"
                },
                {
                    "events": "@nodes:mouseout",
                    "update": "null"
                },
                {
                    "events": "@links:mouseover",
                    "update": "null"
                },
                {
                    "events": "view:mouseleave",
                    "update": "null"
                }
            ]
        }
    ],
    "data": [
        {
            "name": "link-data",
            "values": [
                {
                    "match_weight": 51.54137674766134,
                    "match_probability": 0.9999999999999997,
                    "source_system_l": "DELIUS",
                    "source_system_r": "DELIUS",
                    "id_l": 0,
                    "id_r": 1,
                    "last_name_std_l": "THOMAS",
                    "last_name_std_r": "THOMAS",
                    "name_1_std_l": "CLAIRE",
                    "name_1_std_r": "CLAIRE",
                    "first_and_last_name_std_l": "CLAIRE THOMAS",
                    "first_and_last_name_std_r": "CLAIRE THOMAS",
                    "forename_std_arr_l": [
                        "CLAIRE",
                        "GEOFFREY",
                        "BRYAN"
                    ],
                    "forename_std_arr_r": [
                        "CLAIRE",
                        "GEOFFREY",
                        "BRYAN"
                    ],
                    "last_name_std_arr_l": [
                        "THOMAS",
                        "HENRY"
                    ],
                    "last_name_std_arr_r": [
                        "THOMAS",
                        "HENRY"
                    ],
                    "date_of_birth_arr_l": [
                        "1952-06-26"
                    ],
                    "date_of_birth_arr_r": [
                        "1952-06-26"
                    ],
                    "date_of_birth_l": "1952-06-26",
                    "date_of_birth_r": "1952-06-26",
                    "postcode_arr_l": [
                        "W49JR",
                        "WA6R7AE",
                        "G7D9HX"
                    ],
                    "postcode_arr_r": [
                        "W49JR",
                        "WA6R7AE",
                        "G7D9HX"
                    ],
                    "postcode_arr_with_freq_l": [
                        {
                            "value": "G7D9HX",
                            "rel_freq": 1.0
                        },
                        {
                            "value": "W49JR",
                            "rel_freq": 1.0
                        },
                        {
                            "value": "WA6R7AE",
                            "rel_freq": 1.0
                        }
                    ],
                    "postcode_arr_with_freq_r": [
                        {
                            "value": "G7D9HX",
                            "rel_freq": 1.0
                        },
                        {
                            "value": "W49JR",
                            "rel_freq": 1.0
                        },
                        {
                            "value": "WA6R7AE",
                            "rel_freq": 1.0
                        }
                    ],
                    "postcode_outcode_arr_l": [
                        "W4",
                        "WA6R",
                        "G7D"
                    ],
                    "postcode_outcode_arr_r": [
                        "W4",
                        "WA6R",
                        "G7D"
                    ],
                    "name_2_std_l": "GEOFFREY",
                    "name_2_std_r": "GEOFFREY",
                    "cro_single_l": "354009",
                    "cro_single_r": "354009",
                    "pnc_single_l": "455736",
                    "pnc_single_r": "455736",
                    "sentence_date_arr_l": [
                        "1998-12-10",
                        "2004-04-30"
                    ],
                    "sentence_date_arr_r": [
                        "1998-12-10",
                        "2004-04-30"
                    ],
                    "override_marker_l": null,
                    "override_marker_r": null,
                    "override_scopes_l": null,
                    "override_scopes_r": null,
                    "master_defendant_id_l": null,
                    "master_defendant_id_r": null,
                    "match_id_l": "63eb8ba5-6cad-4e2c-99a7-546dca9ff6c9",
                    "match_id_r": "31c32969-31fb-4bd1-9e65-861e41bfbb1e",
                    "source": "63eb8ba5-6cad-4e2c-99a7-546dca9ff6c9",
                    "target": "31c32969-31fb-4bd1-9e65-861e41bfbb1e"
                }
            ],
            "transform": [
                {
                    "type": "filter",
                    "expr": "datum.match_weight >= scoreThreshold"
                },
                {
                    "type": "lookup",
                    "from": "node-data",
                    "key": "match_id",
                    "fields": [
                        "match_id_l"
                    ],
                    "values": [
                        "name_3_std"
                    ],
                    "as": [
                        "name_3_std_l"
                    ]
                },
                {
                    "type": "lookup",
                    "from": "node-data",
                    "key": "match_id",
                    "fields": [
                        "match_id_r"
                    ],
                    "values": [
                        "name_3_std"
                    ],
                    "as": [
                        "name_3_std_r"
                    ]
                }
            ]
        },
        {
            "name": "node-data",
            "values": [
                {
                    "id": 0,
                    "match_id": "63eb8ba5-6cad-4e2c-99a7-546dca9ff6c9",
                    "source_system": "DELIUS",
                    "source_system_id": "55ebea32-c781-4ad2-9180-4b641b8cd606",
                    "master_defendant_id": null,
                    "name_1_std": "CLAIRE",
                    "name_2_std": "GEOFFREY",
                    "name_3_std": "FRANCES",
                    "last_name_std": "THOMAS",
                    "first_and_last_name_std": "CLAIRE THOMAS",
                    "forename_std_arr": [
                        "CLAIRE",
                        "GEOFFREY",
                        "BRYAN"
                    ],
                    "forename_first": "CLAIRE",
                    "forename_last": "BRYAN",
                    "last_name_std_arr": [
                        "THOMAS",
                        "HENRY"
                    ],
                    "last_name_first": "THOMAS",
                    "last_name_last": "HENRY",
                    "date_of_birth": "1952-06-26",
                    "date_of_birth_arr": [
                        "1952-06-26"
                    ],
                    "date_of_birth_last": "1952-06-26",
                    "sentence_date_arr": [
                        "1998-12-10",
                        "2004-04-30"
                    ],
                    "sentence_date_first": "1998-12-10",
                    "sentence_date_last": "2004-04-30",
                    "postcode_arr": [
                        "W49JR",
                        "WA6R7AE",
                        "G7D9HX"
                    ],
                    "postcode_first": "W49JR",
                    "postcode_second": "WA6R7AE",
                    "postcode_last": "G7D9HX",
                    "postcode_outcode_arr": [
                        "W4",
                        "WA6R",
                        "G7D"
                    ],
                    "postcode_outcode_first": "W4",
                    "postcode_outcode_last": "G7D",
                    "cro_single": "354009",
                    "pnc_single": "455736",
                    "override_marker": null,
                    "override_scopes": null,
                    "postcode_arr_repacked": [
                        "G7D9HX",
                        "W49JR",
                        "WA6R7AE"
                    ],
                    "postcode_freq_arr": [
                        1.0,
                        1.0,
                        1.0
                    ],
                    "postcode_arr_with_freq": [
                        {
                            "value": "G7D9HX",
                            "rel_freq": 1.0
                        },
                        {
                            "value": "W49JR",
                            "rel_freq": 1.0
                        },
                        {
                            "value": "WA6R7AE",
                            "rel_freq": 1.0
                        }
                    ]
                },
                {
                    "id": 1,
                    "match_id": "31c32969-31fb-4bd1-9e65-861e41bfbb1e",
                    "source_system": "DELIUS",
                    "source_system_id": "1086a9ed-afd8-48eb-be84-5e465804cf4b",
                    "master_defendant_id": null,
                    "name_1_std": "CLAIRE",
                    "name_2_std": "GEOFFREY",
                    "name_3_std": "FRANCES",
                    "last_name_std": "THOMAS",
                    "first_and_last_name_std": "CLAIRE THOMAS",
                    "forename_std_arr": [
                        "CLAIRE",
                        "GEOFFREY",
                        "BRYAN"
                    ],
                    "forename_first": "CLAIRE",
                    "forename_last": "BRYAN",
                    "last_name_std_arr": [
                        "THOMAS",
                        "HENRY"
                    ],
                    "last_name_first": "THOMAS",
                    "last_name_last": "HENRY",
                    "date_of_birth": "1952-06-26",
                    "date_of_birth_arr": [
                        "1952-06-26"
                    ],
                    "date_of_birth_last": "1952-06-26",
                    "sentence_date_arr": [
                        "1998-12-10",
                        "2004-04-30"
                    ],
                    "sentence_date_first": "1998-12-10",
                    "sentence_date_last": "2004-04-30",
                    "postcode_arr": [
                        "W49JR",
                        "WA6R7AE",
                        "G7D9HX"
                    ],
                    "postcode_first": "W49JR",
                    "postcode_second": "WA6R7AE",
                    "postcode_last": "G7D9HX",
                    "postcode_outcode_arr": [
                        "W4",
                        "WA6R",
                        "G7D"
                    ],
                    "postcode_outcode_first": "W4",
                    "postcode_outcode_last": "G7D",
                    "cro_single": "354009",
                    "pnc_single": "455736",
                    "override_marker": null,
                    "override_scopes": null,
                    "postcode_arr_repacked": [
                        "G7D9HX",
                        "W49JR",
                        "WA6R7AE"
                    ],
                    "postcode_freq_arr": [
                        1.0,
                        1.0,
                        1.0
                    ],
                    "postcode_arr_with_freq": [
                        {
                            "value": "G7D9HX",
                            "rel_freq": 1.0
                        },
                        {
                            "value": "W49JR",
                            "rel_freq": 1.0
                        },
                        {
                            "value": "WA6R7AE",
                            "rel_freq": 1.0
                        }
                    ]
                }
            ]
        },
        {
            "name": "hoverCols",
            "values": [
                {
                    "key": "source_system",
                    "fieldL": "source_system_l",
                    "fieldR": "source_system_r",
                    "fieldN": "source_system"
                },
                {
                    "key": "name_1_std",
                    "fieldL": "name_1_std_l",
                    "fieldR": "name_1_std_r",
                    "fieldN": "name_1_std"
                },
                {
                    "key": "name_2_std",
                    "fieldL": "name_2_std_l",
                    "fieldR": "name_2_std_r",
                    "fieldN": "name_2_std"
                },
                {
                    "key": "name_3_std",
                    "fieldL": "name_3_std_l",
                    "fieldR": "name_3_std_r",
                    "fieldN": "name_3_std"
                },
                {
                    "key": "last_name_std",
                    "fieldL": "last_name_std_l",
                    "fieldR": "last_name_std_r",
                    "fieldN": "last_name_std"
                },
                {
                    "key": "date_of_birth",
                    "fieldL": "date_of_birth_l",
                    "fieldR": "date_of_birth_r",
                    "fieldN": "date_of_birth"
                },
                {
                    "key": "cro_single",
                    "fieldL": "cro_single_l",
                    "fieldR": "cro_single_r",
                    "fieldN": "cro_single"
                },
                {
                    "key": "pnc_single",
                    "fieldL": "pnc_single_l",
                    "fieldR": "pnc_single_r",
                    "fieldN": "pnc_single"
                }
            ],
            "transform": [
                {
                    "type": "window",
                    "ops": [
                        "row_number"
                    ],
                    "as": [
                        "idx"
                    ]
                },
                {
                    "type": "formula",
                    "as": "colIdx",
                    "expr": "datum.idx - 1"
                },
                {
                    "type": "formula",
                    "as": "valL",
                    "expr": "hoverLink ? (isValid(hoverLink[datum.fieldL]) ? hoverLink[datum.fieldL] : '') : (hoverNode ? (isValid(hoverNode.datum[datum.fieldN]) ? hoverNode.datum[datum.fieldN] : '') : '')"
                },
                {
                    "type": "formula",
                    "as": "valR",
                    "expr": "hoverLink && isValid(hoverLink[datum.fieldR]) ? hoverLink[datum.fieldR] : ''"
                }
            ]
        }
    ],
    "scales": [
        {
            "name": "color",
            "type": "ordinal",
            "domain": {
                "data": "node-data",
                "field": "source_system"
            },
            "range": {
                "scheme": "category10"
            }
        },
        {
            "name": "linkColor",
            "type": "threshold",
            "domain": [
                18,
                24
            ],
            "range": [
                "#fb9191",
                "#fdbe7a",
                "#9fff9f"
            ]
        }
    ],
    "marks": [
        {
            "type": "group",
            "name": "chart",
            "clip": true,
            "encode": {
                "update": {
                    "x": {
                        "value": 0
                    },
                    "y": {
                        "value": 0
                    },
                    "width": {
                        "signal": "width"
                    },
                    "height": {
                        "signal": "plotH"
                    }
                }
            },
            "marks": [
                {
                    "name": "nodes",
                    "type": "symbol",
                    "zindex": 1,
                    "from": {
                        "data": "node-data"
                    },
                    "on": [
                        {
                            "trigger": "fix",
                            "modify": "node",
                            "values": "{fx: fix[0], fy: fix[1]}"
                        }
                    ],
                    "encode": {
                        "enter": {
                            "fill": {
                                "scale": "color",
                                "field": "source_system"
                            },
                            "stroke": {
                                "value": "white"
                            }
                        },
                        "update": {
                            "size": {
                                "signal": "2 * $nodeRadius * $nodeRadius"
                            },
                            "cursor": {
                                "value": "pointer"
                            }
                        }
                    },
                    "transform": [
                        {
                            "type": "force",
                            "iterations": 300,
                            "restart": {
                                "signal": "restart"
                            },
                            "static": {
                                "signal": "$static"
                            },
                            "signal": "force",
                            "forces": [
                                {
                                    "force": "center",
                                    "x": {
                                        "signal": "$cx"
                                    },
                                    "y": {
                                        "signal": "$cy"
                                    }
                                },
                                {
                                    "force": "collide",
                                    "radius": {
                                        "signal": "$nodeRadius"
                                    }
                                },
                                {
                                    "force": "nbody",
                                    "strength": {
                                        "signal": "$nodeCharge"
                                    }
                                },
                                {
                                    "force": "link",
                                    "id": "datum.match_id",
                                    "links": "link-data",
                                    "distance": {
                                        "signal": "$linkDistance"
                                    }
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "text",
                    "name": "node-labels",
                    "from": {
                        "data": "nodes"
                    },
                    "interactive": false,
                    "zindex": 2,
                    "encode": {
                        "enter": {
                            "align": {
                                "value": "center"
                            },
                            "baseline": {
                                "value": "middle"
                            },
                            "fontSize": {
                                "value": 12
                            },
                            "fontWeight": {
                                "value": "bold"
                            },
                            "fill": {
                                "value": "white"
                            },
                            "text": {
                                "signal": "slice(datum.datum.source_system_id, 0, 4)"
                            }
                        },
                        "update": {
                            "x": {
                                "field": "x"
                            },
                            "y": {
                                "field": "y"
                            }
                        }
                    }
                },
                {
                    "type": "text",
                    "name": "link-labels",
                    "from": {
                        "data": "link-data"
                    },
                    "interactive": false,
                    "aria": false,
                    "zindex": 1,
                    "encode": {
                        "enter": {
                            "align": {
                                "value": "center"
                            },
                            "baseline": {
                                "value": "middle"
                            },
                            "fontSize": {
                                "value": 12
                            },
                            "fill": {
                                "value": "black"
                            },
                            "fontWeight": {
                                "value": "bold"
                            }
                        },
                        "update": {
                            "text": {
                                "signal": "format(datum.match_weight, '.1f')"
                            },
                            "x": {
                                "signal": "(datum.source.x + datum.target.x) / 2"
                            },
                            "y": {
                                "signal": "(datum.source.y + datum.target.y) / 2"
                            }
                        }
                    }
                },
                {
                    "type": "path",
                    "name": "links",
                    "from": {
                        "data": "link-data"
                    },
                    "interactive": true,
                    "zindex": 0,
                    "encode": {
                        "update": {
                            "stroke": {
                                "scale": "linkColor",
                                "field": "match_weight"
                            },
                            "strokeWidth": {
                                "value": 3
                            },
                            "cursor": {
                                "value": "pointer"
                            }
                        }
                    },
                    "transform": [
                        {
                            "type": "linkpath",
                            "require": {
                                "signal": "force"
                            },
                            "shape": "line",
                            "sourceX": "datum.source.x",
                            "sourceY": "datum.source.y",
                            "targetX": "datum.target.x",
                            "targetY": "datum.target.y"
                        }
                    ]
                }
            ]
        },
        {
            "type": "group",
            "name": "hoverTable",
            "interactive": false,
            "encode": {
                "update": {
                    "x": {
                        "value": 0
                    },
                    "y": {
                        "signal": "plotH + gap"
                    },
                    "width": {
                        "signal": "width"
                    },
                    "height": {
                        "signal": "tableH"
                    },
                    "opacity": {
                        "signal": "(hoverLink || hoverNode) ? 1 : 0"
                    }
                }
            },
            "marks": [
                {
                    "type": "rect",
                    "encode": {
                        "update": {
                            "width": {
                                "signal": "width"
                            },
                            "height": {
                                "signal": "tableH"
                            },
                            "fill": {
                                "value": "white"
                            },
                            "stroke": {
                                "value": "#999"
                            },
                            "fillOpacity": {
                                "signal": "(hoverLink || hoverNode) ? 0.95 : 0"
                            },
                            "strokeOpacity": {
                                "signal": "(hoverLink || hoverNode) ? 1    : 0"
                            }
                        }
                    }
                },
                {
                    "type": "text",
                    "from": {
                        "data": "hoverCols"
                    },
                    "encode": {
                        "update": {
                            "x": {
                                "signal": "cellPad + datum.colIdx * cellW"
                            },
                            "y": {
                                "signal": "cellPad"
                            },
                            "text": {
                                "field": "key"
                            },
                            "fontWeight": {
                                "value": "bold"
                            },
                            "baseline": {
                                "value": "top"
                            },
                            "align": {
                                "value": "left"
                            },
                            "fontSize": {
                                "value": 12
                            },
                            "opacity": {
                                "signal": "(hoverLink || hoverNode) ? 1 : 0"
                            }
                        }
                    }
                },
                {
                    "type": "rule",
                    "encode": {
                        "update": {
                            "x": {
                                "value": 0
                            },
                            "x2": {
                                "signal": "width"
                            },
                            "y": {
                                "signal": "cellPad + rowH - 2"
                            },
                            "stroke": {
                                "value": "#ddd"
                            },
                            "strokeWidth": {
                                "value": 1
                            },
                            "opacity": {
                                "signal": "(hoverLink || hoverNode) ? 1 : 0"
                            }
                        }
                    }
                },
                {
                    "type": "text",
                    "from": {
                        "data": "hoverCols"
                    },
                    "encode": {
                        "update": {
                            "x": {
                                "signal": "cellPad + datum.colIdx * cellW"
                            },
                            "y": {
                                "signal": "cellPad + rowH"
                            },
                            "text": {
                                "field": "valL"
                            },
                            "baseline": {
                                "value": "top"
                            },
                            "align": {
                                "value": "left"
                            },
                            "fontSize": {
                                "value": 11
                            },
                            "opacity": {
                                "signal": "(hoverLink || hoverNode) ? 1 : 0"
                            }
                        }
                    }
                },
                {
                    "type": "rule",
                    "encode": {
                        "update": {
                            "x": {
                                "value": 0
                            },
                            "x2": {
                                "signal": "width"
                            },
                            "y": {
                                "signal": "cellPad + 2*rowH - 2"
                            },
                            "stroke": {
                                "value": "#eee"
                            },
                            "strokeWidth": {
                                "value": 1
                            },
                            "opacity": {
                                "signal": "hoverLink ? 1 : 0"
                            }
                        }
                    }
                },
                {
                    "type": "text",
                    "from": {
                        "data": "hoverCols"
                    },
                    "encode": {
                        "update": {
                            "x": {
                                "signal": "cellPad + datum.colIdx * cellW"
                            },
                            "y": {
                                "signal": "cellPad + 2*rowH"
                            },
                            "text": {
                                "field": "valR"
                            },
                            "baseline": {
                                "value": "top"
                            },
                            "align": {
                                "value": "left"
                            },
                            "fontSize": {
                                "value": 11
                            },
                            "opacity": {
                                "signal": "hoverLink ? 1 : 0"
                            }
                        }
                    }
                }
            ]
        }
    ]
}